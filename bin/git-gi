#! /bin/bash

#
# git-gi
#

set -e

data_dir="$(cd $(dirname $0)/../ && pwd)/share/git-gi/gitignore"

echo() { /bin/echo "$@"; }

usage_exit() {
    cat<<EOS
Usage: git gi [-h| --help] [-f] [list] :types: [...]

    git-gi commands are:
      -h           - show this help
      --help       - show manpage
      -f | --write - write to .gitignore under the current directory.
      -l | --list  - lists the operating systems, programming languages and IDE input types.
      :types:      - generates .gitignore files for types of operating systems, programming languages or IDEs.

    ex)
        git gi -f linux ruby vim   # add a postscript to gitignore on currentdir.

EOS
    exit 1
}


gi() {
    echo "### Generated by git-gi"
    echo
    for x in "$@";do
        filename=${data_dir}/${x}.gitignore
        if [ -e ${filename} ];then
            echo "### ${x}"
            cat ${filename}
            echo
            echo
        else
            echo "#!! ERROR: ${x} is undefined. Use list command to see defined gitignore types !!#"
        fi
    done
    echo
}

gi_with_write() {
    local gi_result="$(gi "$@")"
    local gitignore_file="$(pwd)/.gitignore"

    if [ -e $(pwd)/.gitignore ];then
        echo "${gi_result}" >>  ${gitignore_file}
        local mesg="Have appended ${gitignore_file}"
    else
        echo "${gi_result}" >  ${gitignore_file}
        local mesg="Create ${gitignore_file}"
    fi
    echo "${gi_result}"
    echo
    echo
    echo "${mesg}"
}

list() {
    support_list="$(
        for x in $(ls ${data_dir});do
            echo -n ${x} | perl -pe "s/(?:^([a-zA-z0-9\+-_]+).gitignore$)/\$1\t/"
        done
    )"
    echo "${support_list}"
}

main() {
    [ $# -eq "0" ] && usage_exit
    case "$1" in
        -l | --list)
            list && exit 1;
            ;;
        -h)
            usage_exit
            ;;
        -f | --write)
            shift
            gi_with_write "$@"
            ;;
        *)
            gi "$@"
            ;;
    esac
}


main "$@" && exit 0
